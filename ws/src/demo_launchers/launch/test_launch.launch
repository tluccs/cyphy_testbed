<?xml version="1.0"?>
<launch>
	<arg name="tg_frame" default="cf1" /> <!-- Identify the frame to be controlled --> 
	<arg name="commander_id" default="cm1" />  <!-- Useful to identify the source of the commands -->
<!-- 
    This launcher sets up the nodes to send commands to the vehicle.
-->

<group ns="$(arg commander_id)">
    <!--
    ============================================================================
    Trajectory Generation Service
    -->
    <node name="Guidance_Node" pkg="guidance" type="guidance.py" output="screen"> 
    </node>

	<!--
    ============================================================================
    Contoller Node
    -->
		<include file="$(find demo_launchers)/launch/ext_control.launch">
			<arg name="setpoint_topic" value="/setpoint" />
			<arg name="state_topic" value="/cf1/external_odom" />
			<arg name="control_topic" value="/cm1/control" />
		</include>

		<!-- Converter for custom command velocity messages. -->
		<node name="cmd_vel_converter"
        pkg="controller"
        type="cmd_vel_converter_node"
        output="screen">

    <param name="topics/control" value="/cm1/control" />
    <param name="topics/cmd_vel" value="/cf1/cmd_vel" />
		</node>

</group>

<group ns="$(arg tg_frame)">
	<!-- 
	===========================================================================
	Run the node publishing the setpoint value as odometry message which can be visualized in
	rviz
	-->
	<node name="ctrlsetpoint_odometry_pub" pkg='monitors' type="setpoint_ghost_pub" output="screen">
		<param name="frame" value="$(arg tg_frame)" type='str' />
		<param name="command_id" value="$(arg commander_id)" type='str' />
	</node>	
</group>

<arg name="uri" default="radio://0/82/2M/E7E7E7E7E7" />
<arg name="frame" default="cf1" />
<arg name="ip" default="192.168.1.198" />
<arg name="port" default="3883" />

<include file="$(find crazyflie_driver)/launch/crazyflie_server.launch">
</include>

<node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
        <param name="uri" value="$(arg uri)" />
        <param name="tf_prefix" value="cf1" />
        <param name="enable_logging" value="False" />
        <param name="enable_logging_imu" value="False" />
        <param name="enable_logging_temperature" value="False" />
        <param name="enable_logging_magnetic_field" value="False" />
        <param name="enable_logging_pressure" value="False" />
        <param name="enable_logging_battery" value="False" />
        <param name="enable_logging_packets" value="False" />
        <param name="enable_logging_pose" value="False" /> 
        <rosparam>
                genericLogTopics: ["logEstAttRPY"]
                genericLogTopicFrequencies: [10]
                genericLogTopic_logEstAttRPY_Variables: ["stateEstimate.roll", "stateEstimate.pitch", "stateEstimate.yaw"]
        </rosparam>
</node>

<!--
============================================================================
Bag recording 

- /setpoint: Trajectory setpoint for the crazyflie 
-->
<node pkg="rosbag" name="record" type="record" args="-O /tmp/$(arg commander_id)_$(arg tg_frame)_cmd /$(arg commander_id)/$(arg tg_frame)/setpoint"/>
</launch>
